plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

//setting start
def stableJDK = JavaVersion.VERSION_11
def stableBuildToolsV = "30.0.3"

def canaryJDK = JavaVersion.VERSION_11
def canaryBuildToolsV = "31.0.0"

def customVersionName = "1.6"

def isCanaryVersion = false
def BuildToolsWithSourceCode = false
def unmock=false
//setting end

if(unmock)
apply plugin: 'de.mobilej.unmock'



def stableBT = [
        buildToolsVersion: stableBuildToolsV,
        compileSdk       : Integer.valueOf(stableBuildToolsV.split("\\.")[0])
]
def canaryBT = [
        buildToolsVersion: canaryBuildToolsV,
        compileSdk       : Integer.valueOf(canaryBuildToolsV.split("\\.")[0])
]

def stable = [
        targetSdk          : Integer.valueOf(stableBuildToolsV.split("\\.")[0]),

        sourceCompatibility: stableJDK,
        targetCompatibility: stableJDK,
        jvmTarget          : String.valueOf(stableJDK.ordinal()+1),
        versionName        : customVersionName + " stable",
        //ver                : "latest.release"
]
def canary = [
        targetSdk          : Integer.valueOf(canaryBuildToolsV.split("\\.")[0]),
        sourceCompatibility: stableJDK,
        targetCompatibility: canaryJDK,
        jvmTarget          : String.valueOf(canaryJDK.ordinal()+1),
        versionName        : customVersionName + " canary",
        //ver                : "latest.integration"
]

def currentBT = (BuildToolsWithSourceCode == false) ? canaryBT : stableBT
def current = (isCanaryVersion == true) ? canary : stable


android {
    compileSdk currentBT.compileSdk
    buildToolsVersion currentBT.buildToolsVersion
    defaultConfig {
        applicationId "com.privacyFirst.usageStats"
        minSdk 21
        targetSdk current.targetSdk
        versionCode Integer.valueOf(customVersionName.split("\\.")[0])
        versionName current.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility current.sourceCompatibility
        targetCompatibility current.targetCompatibility
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = current.jvmTarget
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions{
        unitTests.includeAndroidResources = true

    }
}

if(unmock)
dependencies{
    unmock 'org.robolectric:android-all:4.3_r2-robolectric-0'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    //testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'

    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    /*implementation 'androidx.activity:activity-compose:1.3.1'
    implementation 'androidx.compose.material:material:1.1.0-alpha01'
    implementation 'androidx.compose.animation:animation:1.1.0-alpha01'
    implementation 'androidx.compose.ui:ui-tooling:1.1.0-alpha01'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.1.0-alpha01'
    implementation 'com.google.android.material:compose-theme-adapter:1.0.1'
    implementation 'com.google.accompanist:accompanist-appcompat-theme:0.16.1'*/


    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'



    def room_version = "2.3.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    //kapt("androidx.room:room-compiler:$room_version")
    //ksp("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    implementation "androidx.room:room-paging:2.4.0-alpha04"

}



//Url: https://github.com/bjoernQ/unmock-plugin
if(unmock)
unMock {
    keep "android.widget.BaseAdapter"
    keep "android.widget.ArrayAdapter"
    keep "android.os.Bundle"
    keepStartingWith "android.database.MatrixCursor"
    keep "android.database.AbstractCursor"
    keep "android.database.CrossProcessCursor"
    keepStartingWith "android.text.TextUtils"
    keepStartingWith "android.util."
    keepStartingWith "android.text."
    keepStartingWith "android.content.ContentValues"
    keepStartingWith "android.content.ComponentName"
    keepStartingWith "android.content.ContentUris"
    keepStartingWith "android.content.ContentProviderOperation"
    keepStartingWith "android.content.ContentProviderResult"
    keepStartingWith "android.content.UriMatcher"
    keepStartingWith "android.content.Intent"
    keep "android.location.Location"
    keepStartingWith "android.content.res.Configuration"
    keepStartingWith "org."
    keepStartingWith "libcore."
    keepStartingWith "com.android.internal.R"
    keepStartingWith "com.android.internal.util."
    keep "android.net.Uri"

    keepAndRename "java.nio.charset.Charsets" to "xjava.nio.charset.Charsets"
}